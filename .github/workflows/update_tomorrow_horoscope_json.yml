name: Update Tomorrow Horoscope

on:
  schedule:
    - cron: '0 1 * * *'
    - cron: '0 13 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-horoscope:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ github.token }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run horoscope script
        run: python tomorrow_horoscope.py
      - name: Check for changes
        id: git-check
        run: |
          git diff --exit-code tomorrow_horoscope.json || echo "changes=true" >> $GITHUB_OUTPUT
      - name: Commit and push TOMORROW JSON if changed
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add tomorrow_horoscope.json
          git commit -m "Update tomorrow horoscope data [skip ci]"
          # Pull and push with retry logic
          MAX_RETRIES=3
          RETRY_COUNT=0
          until git pull --rebase origin ${GITHUB_REF} && git push origin HEAD:${GITHUB_REF}
          do
            RETRY_COUNT=$((RETRY_COUNT+1))
            if [ $RETRY_COUNT -ge $MAX_RETRIES ]; then
              echo "Failed to push after $MAX_RETRIES attempts"
              exit 1
            fi
            echo "Push failed, retrying in 15 seconds... (Attempt $RETRY_COUNT/$MAX_RETRIES)"
            sleep 15
          done
          
      - name: Run modification script
        if: steps.git-check.outputs.changes == 'true'
        run: python modify_tomorrow_horoscope.py

      - name: Commit and push MODIFIED JSON if changed
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add modified_tomorrow_horoscope.json
          git commit -m "Update modified tomorrow horoscope data [skip ci]"
          # Pull and push with retry logic
          MAX_RETRIES=3
          RETRY_COUNT=0
          until git pull --rebase origin ${GITHUB_REF} && git push origin HEAD:${GITHUB_REF}
          do
            RETRY_COUNT=$((RETRY_COUNT+1))
            if [ $RETRY_COUNT -ge $MAX_RETRIES ]; then
              echo "Failed to push after $MAX_RETRIES attempts"
              exit 1
            fi
            echo "Push failed, retrying in 15 seconds... (Attempt $RETRY_COUNT/$MAX_RETRIES)"
            sleep 15
          done
        
      - name: Checkout external repository
        if: steps.git-check.outputs.changes == 'true'
        uses: actions/checkout@v3
        with:
          repository: affnarayani/astro_vista_app_content
          path: external-repo
          token: ${{ secrets.PAT_TOKEN }}
          
      - name: Copy and commit to external repository
        if: steps.git-check.outputs.changes == 'true'
        run: |
          cp modified_tomorrow_horoscope.json external-repo/
          cd external-repo
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add modified_tomorrow_horoscope.json
          git commit -m "Update modified tomorrow horoscope data [skip ci]"
          git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/affnarayani/astro_vista_app_content.git
          # Pull and push with retry logic
          MAX_RETRIES=3
          RETRY_COUNT=0
          until git pull --rebase origin main && git push
          do
            RETRY_COUNT=$((RETRY_COUNT+1))
            if [ $RETRY_COUNT -ge $MAX_RETRIES ]; then
              echo "Failed to push after $MAX_RETRIES attempts"
              exit 1
            fi
            echo "Push failed, retrying in 15 seconds... (Attempt $RETRY_COUNT/$MAX_RETRIES)"
            sleep 15
          done